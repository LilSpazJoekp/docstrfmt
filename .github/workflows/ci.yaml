jobs:
  complete_coveralls:
    needs: test-multi-python
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
  lint-multi-os:
    name: Lint ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          cache: pip
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[lint]
      - name: Lint with pre-commit
        run: pre-commit run --all-files
      - name: Run docstrfmt
        run: docstrfmt .
    strategy:
      matrix:
        os: [ macOS-latest, ubuntu-latest, windows-latest ]
  test-multi-os:
    env:
      PYTHONUTF8: 1
    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          cache: pip
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest
        run: pytest
    strategy:
      matrix:
        os: [ macOS-latest, ubuntu-latest, windows-latest ]
  test-multi-python:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          cache: pip
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[ci,test]
      - name: Test with pytest
        run: coverage run --source docstrfmt --module pytest
      - env:
          COVERALLS_PARALLEL: true
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        name: Submit to coveralls
        run: coveralls --service=github
      - name: Check coverage
        run: coverage report -m --fail-under=100
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
name: CI
on: [ pull_request, push ]
